$date
	Thu Oct 24 21:28:21 2024
$end
$version
	Icarus Verilog
$end
$timescale
	1ns
$end
$scope module multiplier_tb $end
$var wire 32 ! out [31:0] $end
$var wire 1 " exception $end
$var reg 32 # A [31:0] $end
$var reg 32 $ B [31:0] $end
$var reg 1 % control $end
$var reg 1 & reset $end
$scope module uut $end
$var wire 32 ' A [31:0] $end
$var wire 32 ( B [31:0] $end
$var wire 1 % control $end
$var wire 1 & reset $end
$var reg 1 " exception $end
$var reg 8 ) exp_A [7:0] $end
$var reg 8 * exp_B [7:0] $end
$var reg 8 + exp_out [7:0] $end
$var reg 24 , mant_A [23:0] $end
$var reg 24 - mant_B [23:0] $end
$var reg 32 . out [31:0] $end
$var reg 48 / product [47:0] $end
$var reg 1 0 sign_A $end
$var reg 1 1 sign_B $end
$var reg 1 2 sign_out $end
$scope function booth_multiply $end
$var reg 48 3 P [47:0] $end
$var reg 24 4 m1 [23:0] $end
$var reg 24 5 m2 [23:0] $end
$var integer 32 6 i [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
$comment Show the parameter values. $end
$dumpall
$end
#0
$dumpvars
bx 6
bx 5
bx 4
bx 3
x2
x1
x0
bx /
b0 .
bx -
bx ,
bx +
bx *
bx )
bx (
bx '
1&
0%
bx $
bx #
0"
b0 !
$end
#50
0&
#100
x"
bx !
bx .
b11000 6
bx 3
b1xxxxxxxxxxxxxxxxxxxxxxx 4
b1xxxxxxxxxxxxxxxxxxxxxxx 5
b1xxxxxxxxxxxxxxxxxxxxxxx -
b1xxxxxxxxxxxxxxxxxxxxxxx ,
1%
#150
b111111100111100100011011110001 $
b111111100111100100011011110001 (
b111111110100111100110100110110 #
b111111110100111100110100110110 '
#200
0%
#300
0"
b1000000000000101111001101011000 !
b1000000000000101111001101011000 .
b100000101111001101011000110101001111001111010110 /
b11000 6
b100000101111001101011000110101001111001111010110 3
b110100111100110100110110 4
b100111100100011011110001 5
b10000000 +
02
b100111100100011011110001 -
b110100111100110100110110 ,
b1111111 *
b1111111 )
01
00
1%
#350
b1000000000000000000000000000000 $
b1000000000000000000000000000000 (
b111110100000000000000000000000 #
b111110100000000000000000000000 '
#400
0%
#500
b111111000000000000000000000000 !
b111111000000000000000000000000 .
b10000000000000000000000000000000000000000000000 /
b11000 6
b10000000000000000000000000000000000000000000000 3
b100000000000000000000000 4
b100000000000000000000000 5
b1111110 +
b100000000000000000000000 -
b100000000000000000000000 ,
b10000000 *
b1111101 )
1%
#550
b1000000100000000000000000000000 $
b1000000100000000000000000000000 (
b111111101000000000000000000000 #
b111111101000000000000000000000 '
#600
0%
#700
b1000000101000000000000000000000 !
b1000000101000000000000000000000 .
b10100000000000000000000000000000000000000000000 /
b11000 6
b10100000000000000000000000000000000000000000000 3
b101000000000000000000000 4
b10000001 +
b101000000000000000000000 ,
b10000001 *
b1111111 )
1%
#750
b111111101000000000000000000000 $
b111111101000000000000000000000 (
b1000000100000000000000000000000 #
b1000000100000000000000000000000 '
#800
0%
#900
b11000 6
b10100000000000000000000000000000000000000000000 3
b100000000000000000000000 4
b101000000000000000000000 5
b101000000000000000000000 -
b100000000000000000000000 ,
b1111111 *
b10000001 )
1%
#950
b111111100111100100011011110001 $
b111111100111100100011011110001 (
b1111111100000000000000000000000 #
b1111111100000000000000000000000 '
#1000
0%
#1100
1"
b1111111100111100100011011110001 !
b1111111100111100100011011110001 .
b10011110010001101111000100000000000000000000000 /
b11000 6
b10011110010001101111000100000000000000000000000 3
b100111100100011011110001 5
b11111111 +
b100111100100011011110001 -
b11111111 )
1%
#1150
b1000000010000000000000000000000 $
b1000000010000000000000000000000 (
b1000000000000000000000000000000 #
b1000000000000000000000000000000 '
#1200
0%
#1300
0"
b1000000110000000000000000000000 !
b1000000110000000000000000000000 .
b11000000000000000000000000000000000000000000000 /
b11000 6
b11000000000000000000000000000000000000000000000 3
b110000000000000000000000 5
b10000001 +
b110000000000000000000000 -
b10000000 *
b10000000 )
1%
#1350
b11000000000101101010011111110000 $
b11000000000101101010011111110000 (
b11000000101010100110001001001110 #
b11000000101010100110001001001110 '
#1400
0%
#1500
b1000001010010001000101010111111 !
b1000001010010001000101010111111 .
b11001000100010101011111100100010000101100100000 /
b11000 6
b11001000100010101011111100100010000101100100000 3
b101010100110001001001110 4
b100101101010011111110000 5
b10000010 +
b100101101010011111110000 -
b101010100110001001001110 ,
b10000001 )
11
10
1%
#1550
