$date
	Fri Oct 18 16:15:06 2024
$end
$version
	Icarus Verilog
$end
$timescale
	1ns
$end
$scope module Adder_tb $end
$var wire 32 ! out [31:0] $end
$var wire 1 " exception $end
$var reg 32 # A [31:0] $end
$var reg 32 $ B [31:0] $end
$var reg 1 % control $end
$var reg 1 & reset $end
$scope module uut $end
$var wire 32 ' A [31:0] $end
$var wire 32 ( B [31:0] $end
$var wire 1 % control $end
$var wire 1 & reset $end
$var reg 1 " exception $end
$var reg 8 ) expA [7:0] $end
$var reg 8 * expB [7:0] $end
$var reg 8 + expDiff [7:0] $end
$var reg 8 , expOut [7:0] $end
$var reg 25 - mantA [24:0] $end
$var reg 25 . mantB [24:0] $end
$var reg 25 / mantOut [24:0] $end
$var reg 32 0 out [31:0] $end
$var reg 1 1 signA $end
$var reg 1 2 signB $end
$upscope $end
$upscope $end
$enddefinitions $end
$comment Show the parameter values. $end
$dumpall
$end
#0
$dumpvars
x2
x1
bx 0
bx /
bx .
bx -
bx ,
bx +
bx *
bx )
b0 (
b0 '
0&
0%
b0 $
b0 #
x"
bx !
$end
#10
0"
b0 !
b0 0
1&
#20
0&
#40
b100000000000000000000000 !
b100000000000000000000000 0
b100000000000000000000000 /
b1 ,
b100000000000000000000000 .
b100000000000000000000000 -
b0 *
b0 )
02
01
1%
#80
0%
#100
b1000010110010000000000000000000 $
b1000010110010000000000000000000 (
b111110100000000000000000000000 #
b111110100000000000000000000000 '
#120
b1000010110010001000000000000000 !
b1000010110010001000000000000000 0
b110010001000000000000000 /
b10000101 ,
b1000000000000000 -
b1000 +
b110010000000000000000000 .
b10000101 *
b1111101 )
1%
#160
0%
#180
b1000000001000000000000000000000 $
b1000000001000000000000000000000 (
b111111101000000000000000000000 #
b111111101000000000000000000000 '
#200
b1000000011100000000000000000000 !
b1000000011100000000000000000000 0
b111100000000000000000000 /
b10000000 ,
b1 +
b101000000000000000000000 .
b10100000000000000000000 -
b10000000 *
b1111111 )
1%
#240
0%
#260
b111110100000000000000000000000 $
b111110100000000000000000000000 (
b1000010110010000000000000000000 #
b1000010110010000000000000000000 '
#280
b1000010110010001000000000000000 !
b1000010110010001000000000000000 0
b110010001000000000000000 /
b10000101 ,
b1000 +
b1000000000000000 .
b110010000000000000000000 -
b1111101 *
b10000101 )
1%
#320
0%
#340
b1000011110010000000000000000000 $
b1000011110010000000000000000000 (
#360
b1000011111110100000000000000000 !
b1000011111110100000000000000000 0
b111110100000000000000000 /
b10000111 ,
b1100100000000000000000 -
b10 +
b110010000000000000000000 .
b10000111 *
1%
#400
0%
#420
b111111101011101011000101101101 $
b111111101011101011000101101101 (
b1000001110010001111111100011110 #
b1000001110010001111111100011110 '
#440
b1000001110100111110101000110100 !
b1000001110100111110101000110100 0
b110100111110101000110100 /
b10000011 ,
b100 +
b10101110101100010110 .
b110010001111111100011110 -
b1111111 *
b10000011 )
1%
#480
0%
#500
b111111101000000000000000000000 $
b111111101000000000000000000000 (
b111111101000000000000000000000 #
b111111101000000000000000000000 '
#520
b1000000001000000000000000000000 !
b1000000001000000000000000000000 0
b101000000000000000000000 /
b10000000 ,
b101000000000000000000000 .
b101000000000000000000000 -
b1111111 )
1%
#560
0%
#600
b101000000000000000000000 /
b10000000 ,
1%
