$date
	Thu Oct 24 21:23:22 2024
$end
$version
	Icarus Verilog
$end
$timescale
	1ns
$end
$scope module add_sub_tb $end
$var wire 32 ! out [31:0] $end
$var wire 1 " exception $end
$var reg 32 # A [31:0] $end
$var reg 32 $ B [31:0] $end
$var reg 1 % addsub $end
$var reg 1 & control $end
$var reg 1 ' reset $end
$scope module uut $end
$var wire 32 ( A [31:0] $end
$var wire 32 ) B [31:0] $end
$var wire 1 % addsub $end
$var wire 1 & control $end
$var wire 1 ' reset $end
$var reg 1 " exception $end
$var reg 8 * expA [7:0] $end
$var reg 8 + expB [7:0] $end
$var reg 8 , expDiff [7:0] $end
$var reg 8 - expOut [7:0] $end
$var reg 25 . mantA [24:0] $end
$var reg 25 / mantB [24:0] $end
$var reg 25 0 mantOut [24:0] $end
$var reg 32 1 out [31:0] $end
$var reg 1 2 signA $end
$var reg 1 3 signB $end
$var reg 1 4 signOut $end
$upscope $end
$upscope $end
$enddefinitions $end
$comment Show the parameter values. $end
$dumpall
$end
#0
$dumpvars
x4
x3
x2
bx 1
bx 0
bx /
bx .
bx -
bx ,
bx +
bx *
b0 )
b0 (
0'
0&
0%
b0 $
b0 #
x"
bx !
$end
#10
0"
b0 !
b0 1
1'
#20
0'
#40
b100000000000000000000000 !
b100000000000000000000000 1
04
b100000000000000000000000 0
b1 -
b0 ,
b100000000000000000000000 /
b100000000000000000000000 .
b0 +
b0 *
03
02
1&
#80
0&
#100
b1000010110010000000000000000000 $
b1000010110010000000000000000000 )
b111110100000000000000000000000 #
b111110100000000000000000000000 (
#120
b1000010110010001000000000000000 !
b1000010110010001000000000000000 1
b110010001000000000000000 0
b10000101 -
b1000000000000000 .
b1000 ,
b110010000000000000000000 /
b10000101 +
b1111101 *
1&
#160
0&
#180
b1000000001000000000000000000000 $
b1000000001000000000000000000000 )
b111111101000000000000000000000 #
b111111101000000000000000000000 (
#200
b1000000011100000000000000000000 !
b1000000011100000000000000000000 1
b111100000000000000000000 0
b10000000 -
b1 ,
b101000000000000000000000 /
b10100000000000000000000 .
b10000000 +
b1111111 *
1&
#240
0&
#260
b111110100000000000000000000000 $
b111110100000000000000000000000 )
b1000010110010000000000000000000 #
b1000010110010000000000000000000 (
1%
#280
b1000010110001111000000000000000 !
b1000010110001111000000000000000 1
b110001111000000000000000 0
b10000101 -
b1000 ,
b1000000000000000 /
b110010000000000000000000 .
b1111101 +
b10000101 *
13
1&
#320
0&
#340
0%
#360
b1000010110010001000000000000000 !
b1000010110010001000000000000000 1
b110010001000000000000000 0
b1000000000000000 /
03
1&
#400
0&
#420
b1000011110010000000000000000000 $
b1000011110010000000000000000000 )
#440
b1000011111110100000000000000000 !
b1000011111110100000000000000000 1
b111110100000000000000000 0
b10000111 -
b1100100000000000000000 .
b10 ,
b110010000000000000000000 /
b10000111 +
1&
#480
0&
#500
b10111111110001110100101101011010 $
b10111111110001110100101101011010 )
b1000001110010001111111100011110 #
b1000001110010001111111100011110 (
#520
b1000001101111001000101001101001 !
b1000001101111001000101001101001 1
b101111001000101001101001 0
b10000011 -
b100 ,
b11000111010010110101 /
b110010001111111100011110 .
b1111111 +
b10000011 *
13
1&
#560
0&
#580
b111111101000000000000000000000 $
b111111101000000000000000000000 )
b111111101000000000000000000000 #
b111111101000000000000000000000 (
1%
#600
b0 !
b0 1
b0 0
b0 -
b0 ,
b101000000000000000000000 /
b101000000000000000000000 .
b1111111 *
1&
#640
0&
#680
b0 -
1&
